{"version":3,"sources":["types/TodoStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/ErrorMessage/ErrorMeassage.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","utils/preparedTodos.ts","index.tsx"],"names":["TodoStatus","TodoList","todos","onSelectedTodoId","selectedTodoId","className","map","todo","isSelected","id","classNames","completed","title","type","onClick","TodoFilter","onTodoStatus","onTodoStatusSelect","query","onQuery","onChange","event","target","value","ALL","ACTIVE","COMPLETED","Error","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","ErrorMeassage","Loader","TodoModal","onCloseModal","isError","setIsError","useState","user","setUser","loadUser","a","userId","loadedUser","useEffect","href","name","App","setTodos","isLoaded","setIsLoaded","todoStatus","setTodoStatus","setQuery","setSelectedTodoId","loadTodos","loadedTodos","visibleTodos","useMemo","status","filter","normalizedQuery","split","word","trim","toLowerCase","join","includes","preparedTodos","selectedTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbf16f75.chunk.js","sourcesContent":["export const enum TodoStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\n\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onSelectedTodoId: (selectedId:number) => void,\n  selectedTodoId: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectedTodoId,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const isSelected = selectedTodoId === todo.id;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={classNames(\n              { 'has-background-info-light': isSelected },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  { 'has-text-danger': !todo.completed },\n                  { 'has-text-success': todo.completed },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectedTodoId(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    { 'fa-eye': !isSelected },\n                    { 'fa-eye-slash': isSelected },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { TodoStatus } from '../../types/TodoStatus';\n\ntype Props = {\n  onTodoStatusSelect: (option: TodoStatus) => void,\n  query: string,\n  onQuery: (newQuery: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    onTodoStatusSelect: onTodoStatus,\n    query,\n    onQuery,\n  },\n) => {\n  const handleTodoStatusCahnge = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    switch (event.target.value) {\n      case 'all':\n        onTodoStatus(TodoStatus.ALL);\n        break;\n      case 'active':\n        onTodoStatus(TodoStatus.ACTIVE);\n        break;\n      case 'completed':\n        onTodoStatus(TodoStatus.COMPLETED);\n        break;\n      default:\n        throw new Error('Unexpected todo status');\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleTodoStatusCahnge}\n          >\n            <option value={TodoStatus.ALL}>All</option>\n            <option value={TodoStatus.ACTIVE}>Active</option>\n            <option value={TodoStatus.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './ErrorMessage.scss';\n\nexport const ErrorMeassage: React.FC = () => (\n  <article className=\"message is-warning is-medium\">\n    <div className=\"message-header\">\n      <p>Warning</p>\n    </div>\n    <div className=\"message-body\">\n      Ups... Something go wrong, and data cannot be loaded.\n      Please, try later\n    </div>\n  </article>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { ErrorMeassage } from '../ErrorMessage';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo | null,\n  onCloseModal: () => void,\n  isError: boolean,\n  setIsError: (value: boolean) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onCloseModal,\n  isError,\n  setIsError,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUser = async () => {\n    try {\n      const loadedUser = await getUser(todo?.userId || 0);\n\n      setUser(loadedUser);\n    } catch (error) {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  if (isError) {\n    return <ErrorMeassage />;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { TodoStatus } from './types/TodoStatus';\nimport { preparedTodos } from './utils/preparedTodos';\nimport { ErrorMeassage } from './components/ErrorMessage';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [todoStatus, setTodoStatus] = useState<TodoStatus>(TodoStatus.ALL);\n  const [query, setQuery] = useState('');\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [isError, setIsError] = useState(false);\n\n  const loadTodos = async () => {\n    try {\n      const loadedTodos = await getTodos();\n\n      setTodos(loadedTodos);\n      setIsLoaded(true);\n    } catch (error) {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return preparedTodos(todos, todoStatus, query);\n  }, [todos, todoStatus, query]);\n\n  const selectedTodo = todos.find(todo => todo.id === selectedTodoId) || null;\n\n  const handleCloseModal = () => {\n    setSelectedTodoId(0);\n  };\n\n  if (isError) {\n    return <ErrorMeassage />;\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onTodoStatusSelect={setTodoStatus}\n                query={query}\n                onQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={selectedTodoId}\n                    onSelectedTodoId={setSelectedTodoId}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onCloseModal={handleCloseModal}\n          isError={isError}\n          setIsError={setIsError}\n        />\n      )}\n    </>\n  );\n};\n","import { TodoStatus } from '../types/TodoStatus';\nimport { Todo } from '../types/Todo';\n\nexport function preparedTodos(\n  todos: Todo[],\n  status: string,\n  query: string,\n): Todo[] {\n  let visibleTodos = [...todos];\n\n  switch (status) {\n    case TodoStatus.ACTIVE:\n      visibleTodos = visibleTodos.filter(todo => !todo.completed);\n      break;\n    case TodoStatus.COMPLETED:\n      visibleTodos = visibleTodos.filter(todo => todo.completed);\n      break;\n    case TodoStatus.ALL:\n    default:\n      visibleTodos = [...todos];\n      break;\n  }\n\n  if (query) {\n    const normalizedQuery = query\n      .split(' ')\n      .map(word => word.trim().toLowerCase())\n      .join(' ');\n\n    visibleTodos = visibleTodos\n      .filter(todo => todo.title.toLowerCase().includes(normalizedQuery));\n  }\n\n  return visibleTodos;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}